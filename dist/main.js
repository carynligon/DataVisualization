(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// var dataArray= [5, 40, 50, 60];
var width = 500;
var height = 500;

var widthScale = d3.scale.linear()
  .domain([0, 80])
  .range([0, width]);

var color = d3.scale.linear()
  .domain([0, 60])
  .range(['red', 'blue']);

var axis = d3.svg.axis()
  .scale(widthScale)
  .ticks(5);

// var canvas = d3.select('body')
//   .append('svg')
//   .attr('width', width)
//   .attr('height', height);
//
// canvas.append('g')
//   .attr('transform', 'translate(0,400)')
//   .call(axis);
//
// var bars = canvas.selectAll('rect')
//   .data(dataArray)
//   .enter()
//     .append('rect')
//     .attr('width', 0)
//     .attr('height', 50)
//     .attr('fill', function(d) {
//       return color(d);
//     })
//     .attr('y', function(d,i) {
//       return i * 100;
//     });
//
// bars.transition()
//   .duration(1500)
//   .attr('width', function(d) {
//     return widthScale(d);
//   });

d3.json('data/Most+Recent+Cohorts+(Scorecard+Elements).json', function(data) {
  console.log(data);
  var canvas = d3.select('body')
    .append('svg')
    .attr('width', width)
    .attr('height', height);

  canvas.append('g')
    .attr('transform', 'translate(0,400)')
    .call(axis);

  var bars = canvas.selectAll('rect')
    .data(data)
    .enter()
      .append('rect')
      .attr('width', 0)
      .attr('height', 50)
      .attr('fill', function(d) {
        return color(d.age);
      })
      .attr('y', function(d,i) {
        return i * 67;
      });

  bars.transition()
    .duration(1500)
    .attr('width', function(d) {
      return widthScale(d.age);
    });

var text = canvas.selectAll('text')
  .data(data)
  .enter()
    .append('text')
    .attr('fill', 'white')
    .attr('y', function(d,i) {
      return i * 67 + 27;
    })
    .attr('x', 10)
    .text(function(d) {
      console.log(d);
      return d.name;
    });
})

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvY2FyeW5iYXJyeS9wZXJzb25hbC9wcm9qZWN0cy9kYXRhVml6L2FwcC9zY3JpcHRzL2VudHJ5LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsa0NBQWtDO0FBQ2xDLElBQUksS0FBSyxHQUFHLEdBQUcsQ0FBQztBQUNoQixJQUFJLE1BQU0sR0FBRyxHQUFHLENBQUM7O0FBRWpCLElBQUksVUFBVSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFO0dBQy9CLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUNsQixHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDOztBQUVyQixJQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtHQUMxQixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDbEIsR0FBRyxLQUFLLENBQUMsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQzs7QUFFMUIsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUU7R0FDckIsS0FBSyxDQUFDLFVBQVUsQ0FBQztBQUNwQixHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzs7QUFFWixpQ0FBaUM7QUFDakMsbUJBQW1CO0FBQ25CLDBCQUEwQjtBQUMxQiw2QkFBNkI7QUFDN0IsRUFBRTtBQUNGLHFCQUFxQjtBQUNyQiwyQ0FBMkM7QUFDM0MsaUJBQWlCO0FBQ2pCLEVBQUU7QUFDRixzQ0FBc0M7QUFDdEMscUJBQXFCO0FBQ3JCLGFBQWE7QUFDYixzQkFBc0I7QUFDdEIsd0JBQXdCO0FBQ3hCLDBCQUEwQjtBQUMxQixrQ0FBa0M7QUFDbEMseUJBQXlCO0FBQ3pCLFNBQVM7QUFDVCxpQ0FBaUM7QUFDakMsd0JBQXdCO0FBQ3hCLFVBQVU7QUFDVixFQUFFO0FBQ0Ysb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixpQ0FBaUM7QUFDakMsNEJBQTRCO0FBQzVCLFFBQVE7O0FBRVIsRUFBRSxDQUFDLElBQUksQ0FBQyxvREFBb0QsRUFBRSxTQUFTLElBQUksRUFBRSxDQUFDO0VBQzVFLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDbEIsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7S0FDM0IsTUFBTSxDQUFDLEtBQUssQ0FBQztLQUNiLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDO0FBQ3pCLEtBQUssSUFBSSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQzs7RUFFMUIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7S0FDZixJQUFJLENBQUMsV0FBVyxFQUFFLGtCQUFrQixDQUFDO0FBQzFDLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDOztFQUVkLElBQUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDO0tBQ2hDLElBQUksQ0FBQyxJQUFJLENBQUM7S0FDVixLQUFLLEVBQUU7T0FDTCxNQUFNLENBQUMsTUFBTSxDQUFDO09BQ2QsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7T0FDaEIsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUM7T0FDbEIsSUFBSSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsRUFBRSxDQUFDO1FBQ3pCLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztPQUNyQixDQUFDO09BQ0QsSUFBSSxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUN4QixPQUFPLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDdEIsT0FBTyxDQUFDLENBQUM7O0VBRVAsSUFBSSxDQUFDLFVBQVUsRUFBRTtLQUNkLFFBQVEsQ0FBQyxJQUFJLENBQUM7S0FDZCxJQUFJLENBQUMsT0FBTyxFQUFFLFNBQVMsQ0FBQyxFQUFFLENBQUM7TUFDMUIsT0FBTyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQy9CLEtBQUssQ0FBQyxDQUFDOztBQUVQLElBQUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDO0dBQ2hDLElBQUksQ0FBQyxJQUFJLENBQUM7R0FDVixLQUFLLEVBQUU7S0FDTCxNQUFNLENBQUMsTUFBTSxDQUFDO0tBQ2QsSUFBSSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUM7S0FDckIsSUFBSSxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztNQUN4QixPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDO0tBQ3BCLENBQUM7S0FDRCxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQztLQUNiLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDO01BQ2pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7TUFDZixPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUM7S0FDZixDQUFDLENBQUM7Q0FDTixDQUFDIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8vIHZhciBkYXRhQXJyYXk9IFs1LCA0MCwgNTAsIDYwXTtcbnZhciB3aWR0aCA9IDUwMDtcbnZhciBoZWlnaHQgPSA1MDA7XG5cbnZhciB3aWR0aFNjYWxlID0gZDMuc2NhbGUubGluZWFyKClcbiAgLmRvbWFpbihbMCwgODBdKVxuICAucmFuZ2UoWzAsIHdpZHRoXSk7XG5cbnZhciBjb2xvciA9IGQzLnNjYWxlLmxpbmVhcigpXG4gIC5kb21haW4oWzAsIDYwXSlcbiAgLnJhbmdlKFsncmVkJywgJ2JsdWUnXSk7XG5cbnZhciBheGlzID0gZDMuc3ZnLmF4aXMoKVxuICAuc2NhbGUod2lkdGhTY2FsZSlcbiAgLnRpY2tzKDUpO1xuXG4vLyB2YXIgY2FudmFzID0gZDMuc2VsZWN0KCdib2R5Jylcbi8vICAgLmFwcGVuZCgnc3ZnJylcbi8vICAgLmF0dHIoJ3dpZHRoJywgd2lkdGgpXG4vLyAgIC5hdHRyKCdoZWlnaHQnLCBoZWlnaHQpO1xuLy9cbi8vIGNhbnZhcy5hcHBlbmQoJ2cnKVxuLy8gICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLDQwMCknKVxuLy8gICAuY2FsbChheGlzKTtcbi8vXG4vLyB2YXIgYmFycyA9IGNhbnZhcy5zZWxlY3RBbGwoJ3JlY3QnKVxuLy8gICAuZGF0YShkYXRhQXJyYXkpXG4vLyAgIC5lbnRlcigpXG4vLyAgICAgLmFwcGVuZCgncmVjdCcpXG4vLyAgICAgLmF0dHIoJ3dpZHRoJywgMClcbi8vICAgICAuYXR0cignaGVpZ2h0JywgNTApXG4vLyAgICAgLmF0dHIoJ2ZpbGwnLCBmdW5jdGlvbihkKSB7XG4vLyAgICAgICByZXR1cm4gY29sb3IoZCk7XG4vLyAgICAgfSlcbi8vICAgICAuYXR0cigneScsIGZ1bmN0aW9uKGQsaSkge1xuLy8gICAgICAgcmV0dXJuIGkgKiAxMDA7XG4vLyAgICAgfSk7XG4vL1xuLy8gYmFycy50cmFuc2l0aW9uKClcbi8vICAgLmR1cmF0aW9uKDE1MDApXG4vLyAgIC5hdHRyKCd3aWR0aCcsIGZ1bmN0aW9uKGQpIHtcbi8vICAgICByZXR1cm4gd2lkdGhTY2FsZShkKTtcbi8vICAgfSk7XG5cbmQzLmpzb24oJ2RhdGEvTW9zdCtSZWNlbnQrQ29ob3J0cysoU2NvcmVjYXJkK0VsZW1lbnRzKS5qc29uJywgZnVuY3Rpb24oZGF0YSkge1xuICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgdmFyIGNhbnZhcyA9IGQzLnNlbGVjdCgnYm9keScpXG4gICAgLmFwcGVuZCgnc3ZnJylcbiAgICAuYXR0cignd2lkdGgnLCB3aWR0aClcbiAgICAuYXR0cignaGVpZ2h0JywgaGVpZ2h0KTtcblxuICBjYW52YXMuYXBwZW5kKCdnJylcbiAgICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLDQwMCknKVxuICAgIC5jYWxsKGF4aXMpO1xuXG4gIHZhciBiYXJzID0gY2FudmFzLnNlbGVjdEFsbCgncmVjdCcpXG4gICAgLmRhdGEoZGF0YSlcbiAgICAuZW50ZXIoKVxuICAgICAgLmFwcGVuZCgncmVjdCcpXG4gICAgICAuYXR0cignd2lkdGgnLCAwKVxuICAgICAgLmF0dHIoJ2hlaWdodCcsIDUwKVxuICAgICAgLmF0dHIoJ2ZpbGwnLCBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBjb2xvcihkLmFnZSk7XG4gICAgICB9KVxuICAgICAgLmF0dHIoJ3knLCBmdW5jdGlvbihkLGkpIHtcbiAgICAgICAgcmV0dXJuIGkgKiA2NztcbiAgICAgIH0pO1xuXG4gIGJhcnMudHJhbnNpdGlvbigpXG4gICAgLmR1cmF0aW9uKDE1MDApXG4gICAgLmF0dHIoJ3dpZHRoJywgZnVuY3Rpb24oZCkge1xuICAgICAgcmV0dXJuIHdpZHRoU2NhbGUoZC5hZ2UpO1xuICAgIH0pO1xuXG52YXIgdGV4dCA9IGNhbnZhcy5zZWxlY3RBbGwoJ3RleHQnKVxuICAuZGF0YShkYXRhKVxuICAuZW50ZXIoKVxuICAgIC5hcHBlbmQoJ3RleHQnKVxuICAgIC5hdHRyKCdmaWxsJywgJ3doaXRlJylcbiAgICAuYXR0cigneScsIGZ1bmN0aW9uKGQsaSkge1xuICAgICAgcmV0dXJuIGkgKiA2NyArIDI3O1xuICAgIH0pXG4gICAgLmF0dHIoJ3gnLCAxMClcbiAgICAudGV4dChmdW5jdGlvbihkKSB7XG4gICAgICBjb25zb2xlLmxvZyhkKTtcbiAgICAgIHJldHVybiBkLm5hbWU7XG4gICAgfSk7XG59KVxuIl19
